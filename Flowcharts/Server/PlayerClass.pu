@startuml
start
:Player;
split
    :Player.getOrderReply(Order);   
    :OrderReply.isReplyingTo(Order);
    
    detach 
split again
    :Player.read();
    :input = ClientPacket.getPacketType();
    if (input == "2"?(order reply)) then (yes)
        :orderType = ClientPacket.getOrderType;
        :replyObj = ClientPacket.getReply;
        if (orderType == 0?) then (initialise)
            :init = (Reply<Initialise>) ClientPacker.getOrder();
            :this.pendingReplies.put(ClientPacker.getReplyingToOrder(), init);
        elseif (orderType==3?) then (LoadScene)
            :init = (Reply<Integer>) replyObj;
            :init.put();
            detach
        elseif (orderType==4?) then (LOAD_IMAGE)
            :TOO;
            detach
        elseif (orderType==5?) then (GameInput)
            :TIRED;
            detach
        elseif (orderType==6?) then (GameState)
            :FOR THIS;
            detach
        else (no known orderType)
            :pass;
            detach
        endif
        detach
    elseif (input == "5"?(Game input)) then (yes)
        if (storeInput?) then (yes)
            :Room.inputs.add(gameInput);
            detach
        else (no)
            :pass;
            detach
        endif
    else (nothing)
        :pass;
    endif
    detach
split again
    :LoadScene.GAME_SCREEN;
    :Player.storeInput = true;
    :Player.send(Order LoadScene);
    detach
split again
    :Player.add();
    :Player.addUserInputTo(RoomInput);
    detach
split again
    :order = Order(value);
    :Player.send(int PacketType, int OrderTypeLookupTable, order);
    :Player.get(order) -> Reply.getValue();
    detach
split again
    :Player.sendChatMessage("string");

    detach
end split
@enduml